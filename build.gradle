buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext {
    massive = "1"
    major = "10"
    minor = "0"
    mcVersion = "1.12.2"
    forgeVersion = "14.23.5.2768"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

sourceCompatibility='1.8'
targetCompatibility='1.8'

group= "uk.kihira.tails"
archivesBaseName = "Tails"
version = "${project.mcVersion}-${project.massive}.${project.major}.${project.minor}"

if (System.getenv("BRANCH_NAME") != null && System.getenv("BRANCH_NAME") != "master") {
    version += "-${System.getenv("BRANCH_NAME")}"
}
if (System.getenv("BUILD_NUMBER") != null) {
    version += "-${System.getenv("BUILD_NUMBER")}"
}

minecraft {
    version = "${project.mcVersion}-${project.forgeVersion}"
    runDir = "run"
    mappings = "stable_39"
}

//noinspection GroovyAssignabilityCheck
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

test {
	useJUnitPlatform()
}